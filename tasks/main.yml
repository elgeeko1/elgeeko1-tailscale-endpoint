# Install Tailscale (Ubuntu/Debian), join headlessly with an auth key, and verify it's running.
# Assumes: Ubuntu with internet egress. Provide `tailscale_auth_key` via Ansible Vault/vars.

- name: Install Tailscale APT key
  become: true
  ansible.builtin.get_url:
    url: "https://pkgs.tailscale.com/stable/ubuntu/{{ ansible_facts['distribution_release'] }}.noarmor.gpg"
    dest: /usr/share/keyrings/tailscale-archive-keyring.gpg
    mode: "0644"

- name: Configure Tailscale APT repository
  become: true
  register: tailscale_repo
  ansible.builtin.deb822_repository:
    name: tailscale
    types: [deb]
    uris: "https://pkgs.tailscale.com/stable/ubuntu/"
    suites: "{{ ansible_facts['distribution_release'] }}"
    components: [main]
    signed_by: /usr/share/keyrings/tailscale-archive-keyring.gpg
    state: present

- name: Apt update cache
  become: true
  ansible.builtin.apt:
    update_cache: "{{ tailscale_repo.changed | bool }}"

- name: Install Tailscale
  become: true
  ansible.builtin.apt:
    name: tailscale

- name: Enable and start tailscaled
  become: true
  ansible.builtin.service:
    name: tailscaled
    state: started
    enabled: true

- name: Create directory /opt/tailscale/authkey
  become: true
  ansible.builtin.file:
    path: /opt/tailscale
    state: directory
    owner: root
    group: root
    mode: "0600"

- name: Store Tailscale auth key securely
  become: true
  no_log: true
  ansible.builtin.copy:
    dest: /opt/tailscale/authkey
    content: "{{ tailscale_auth_key }}"
    owner: root
    group: root
    mode: "0600"

# check to avoid re-running `tailscale up` if already connected.
- name: Check current Tailscale status
  ansible.builtin.command: tailscale status --json
  register: tailscale_status_raw
  changed_when: false
  failed_when: false

- name: Bring Tailscale up
  when: >
    (tailscale_status_raw.rc != 0) or
    ((tailscale_status_raw.stdout | default('')) == '') or
    ((tailscale_status_raw.stdout | from_json).BackendState | default('') != 'Running')
  become: true
  ansible.builtin.command: >
    tailscale up
    --authkey=file:/opt/tailscale/authkey
    --ssh
    {{ tailscale_up_extra_args | default('') }}

- name: Check Tailscale status
  ansible.builtin.command: tailscale status --json
  register: tailscale_verify_raw
  changed_when: false

- name: Assert Tailscale backend is Running
  ansible.builtin.assert:
    that:
      - "(tailscale_verify_raw.stdout | from_json).BackendState == 'Running'"
    fail_msg: "Tailscale backend is not Running."
    success_msg: "Tailscale backend is Running."

- name: Show Tailscale hostname and IPs
  ansible.builtin.debug:
    msg:
      - "Hostname: {{ (tailscale_verify_raw.stdout | from_json).Self.HostName | default('unknown') }}"
      - "Tailscale IPs: {{ ((tailscale_verify_raw.stdout | from_json).Self.TailscaleIPs | default([])) | join(', ') }}"
